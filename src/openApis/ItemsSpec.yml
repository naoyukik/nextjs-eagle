openapi: 3.0.1
info:
    title: Item API
    version: 1.0.0

paths:
    /api/library/info:
        get:
            summary: Get detailed information of the library currently running.
            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LibraryInfo'
    /api/item/list:
        get:
            summary: Get items that match the filter condition.
            parameters:
                - name: limit
                  in: query
                  description: "The number of items to be displayed. the default number is 200."
                  required: false
                  schema:
                      type: integer
                      example: 10
                - name: offset
                  in: query
                  description: "Offset a collection of results from the api. Start with 0."
                  required: false
                  schema:
                      type: integer
                      example: 0
                - name: orderBy
                  in: query
                  description: "The sorting order. Add a minus sign for descending order."
                  required: false
                  schema:
                      type: string
                      enum:
                          - CREATEDATE
                          - FILESIZE
                          - NAME
                          - RESOLUTION
                      example: "-FILESIZE"
                - name: keyword
                  in: query
                  description: "Filter by the keyword"
                  required: false
                  schema:
                      type: string
                      example: 'character'
                - name: ext
                  in: query
                  description: "Filter by the extension type, e.g.: jpg , png"
                  required: false
                  schema:
                      type: string
                      example: 'svg'
                - name: tags
                  in: query
                  description: "Filter by tags. Use , to divide different tags."
                  required: false
                  schema:
                      type: array
                      items:
                          type: string
                      example: ['test', 'test2']
                - name: folders
                  in: query
                  description: "Filter by Folders.  Use , to divide folder IDs."
                  required: false
                  schema:
                      type: array
                      items:
                          type: string
                      example: ['KB90R2VNPHH3V']

            responses:
                200:
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "success"
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Item'
    /api/item/info:    # new endpoint
        get:
            summary: Get specific item details based on ID.
            parameters:
                - name: id
                  in: path
                  description: "ID of the file"
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Successful operation.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "success"
                                    data:
                                        $ref: '#/components/schemas/Item'

components:
    schemas:
        Palette:
            type: object
            properties:
                color:
                    type: array
                    items:
                        type: integer
                    example: [236, 240, 242]
                ratio:
                    type: number
                    example: 44
        Item:
            type: object
            properties:
                id:
                    type: string
                    example: "KB91GNOPDDVTH"
                name:
                    type: string
                    example: "running-man"
                size:
                    type: integer
                    example: 36382
                ext:
                    type: string
                    example: "svg"
                tags:
                    type: array
                    items:
                        type: string
                    example: []
                folders:
                    type: array
                    items:
                        type: string
                    example: ["KB90QZMU641LI"]
                isDeleted:
                    type: boolean
                    example: false
                url:
                    type: string
                    example: "https://cn.eagle.cool/extensions"
                annotation:
                    type: string
                    example: ""
                modificationTime:
                    type: integer
                    example: 1591774540009
                height:
                    type: integer
                    example: 166
                width:
                    type: integer
                    example: 203
                lastModified:
                    type: integer
                    example: 1591774540171
                noThumbnail:
                    type: boolean
                    example: true
                palettes:
                    type: array
                    items:
                        $ref: '#/components/schemas/Palette'
                    example:
                        - color: [236, 240, 242]
                          ratio: 44
        Folder:
            type: object
            properties:
                id:
                    type: string
                    example: "32455218-9e79-61ca-7e1d-034c0ed9f33b"
                name:
                    type: string
                    example: "Poster Design"
                description:
                    type: string
                    example: ""
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/Folder'
                modificationTime:
                    type: integer
                    example: 1487586362385
                tags:
                    type: array
                    items:
                        type: string
                iconColor:
                    type: string
                    example: "red"
                password:
                    type: string
                    example: ""
                passwordTips:
                    type: string
                    example: ""
                coverId:
                    type: string
                    example: "a387c5d6-5c27-4f1e-96d1-af7ae0256887"
                orderBy:
                    type: string
                    example: "MANUAL"
                sortIncrease:
                    type: boolean
                    example: true
        SmartFolder:
            type: object
            properties:
                id:
                    type: string
                    example: "JQQAV9CA71QSZ"
                icon:
                    type: string
                    example: "calendar-week"
                name:
                    type: string
                    example: "Last Week"
                description:
                    type: string
                    example: ""
                modificationTime:
                    type: integer
                    example: 1542962230621
                conditions:
                    type: array
                    items:
                        $ref: '#/components/schemas/SmartFolderCondition'
                orderBy:
                    type: string
                    example: "FILESIZE"
                sortIncrease:
                    type: boolean
                    example: true
        QuickAccess:
            type: object
            properties:
                type:
                    type: string
                    example: "smartFolder"
                id:
                    type: string
                    example: "7de0bdb8-3124-add7-4a1f-b51f126aa738"
        TagsGroups:
            type: object
            properties:
                id:
                    type: string
                    example: "c549d2a8-c187-c612-617f-83fcef4976a2"
                name:
                    type: string
                    example: "Location"
                tags:
                    type: array
                    items:
                        type: string
                        example: "Kitchen"
                color:
                    type: string
                    example: "yellow"
        LibraryInfo:
            type: object
            properties:
                status:
                    type: string
                    example: "success"
                data:
                    type: object
                    properties:
                        folders:
                            type: array
                            items:
                                $ref: '#/components/schemas/Folder'
                        smartFolders:
                            type: array
                            items:
                                $ref: '#/components/schemas/SmartFolder'
                        quickAccess:
                            type: array
                            items:
                                $ref: '#/components/schemas/QuickAccess'
                        tagsGroups:
                            type: array
                            items:
                                $ref: '#/components/schemas/TagsGroups'
        SmartFolderCondition:
            type: object
            properties:
                match:
                    type: string
                    example: "OR"
                rules:
                    type: array
                    items:
                        type: object
                        properties:
                            method:
                                type: string
                                example: "within"
                            property:
                                type: string
                                example: "createTime"
                            value:
                                type: array
                                items:
                                    type: integer
                                    example: 7